---
title: "HFP_subsetting"
format: html
editor: visual
---

```{r}

# 1. LOAD LIBRARIES ------------------------------------------------------------
pacman::p_load(
  sf,
  terra,
  tidyverse
)

# 2. PREPARE TRACKING DATA -----------------------------------------------------
# Read and prepare tracking data
# From https://www.movebank.org/cms/webapp?gwt_fragment=page%3Dstudies%2Cpath%3Dstudy2636372210
tracking_data <- read_delim("data/input_bobcat_coyotes_wa_gps.csv")

# Convert to SF object and project to Mollweide
animal_sf <- tracking_data |>
  st_as_sf(
    coords = c("location-long", "location-lat"),
    crs = 4326  # WGS84
  ) |>
  st_transform("ESRI:54009")  # Mollweide projection

# 3. CREATE STUDY AREA BUFFER --------------------------------------------------
# Generate 200km buffer around tracking points
tracking_buffer <- animal_sf |>
  st_union() |>
  st_convex_hull() |>     # Create minimum convex polygon
  st_buffer(200000)       # 200km buffer in meters (Mollweide uses meters)

# 4. IDENTIFY RELEVANT HFP TILES -----------------------------------------------
# Function to check tile overlap with study area
check_overlap <- function(tif_file, boundary) {
  r <- rast(tif_file)
  r_extent <- ext(r)
  r_poly <- st_as_sfc(st_bbox(r_extent)) |> 
    st_set_crs(crs(r))
  return(st_intersects(r_poly, boundary, sparse = FALSE)[1,1])
}

# Get list of all HFP tiles (ca. 20 GB of data)
# Download as a tgz from https://datadryad.org/downloads/file_stream/2679334 
# and extract to the given directory
tif_files <- list.files("data/input_HFP-100m-2020/", pattern = "\\.tif$", full.names = TRUE)

# Find tiles intersecting our buffer
overlap_results <- sapply(tif_files, check_overlap, boundary = tracking_buffer)
rasters_list <- lapply(tif_files[overlap_results], rast)

# 5. PROCESS HFP DATA ----------------------------------------------------------
# Merge and crop relevant tiles
merged_relevant_files <- do.call(merge, rasters_list)
human_footprint <- crop(merged_relevant_files, tracking_buffer)

# Save the final cropped HFP raster
writeRaster(
  human_footprint,
  "data/output_HFP_washington_mollweide.tif",
  overwrite = TRUE,
  datatype = "FLT4S",          # Maintain decimal precision for HFP values
  gdal = c("COMPRESS=LZW")     # Reduce file size
)

# 6. VISUAL CHECK --------------------------------------------------------------
ggplot() +
  tidyterra::geom_spatraster(
    data = human_footprint,
    maxcell = 1e6
  ) +
  geom_sf(
    data = animal_sf,
    color = "black",
    size = 1,
    alpha = 0.7
  ) +
  geom_sf(
    data = tracking_buffer,
    color = "red",
    size = 1,
    alpha = 0
  ) +  
  labs(
    title = "Animal tracks (in black) over human footprint",
    fill = "Human footprint"
  ) +
  theme_minimal()
ggsave("img/hfp.png")
```

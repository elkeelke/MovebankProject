---
title: "Preprocessing: UK wader nesting season home range"
format: html
---

## EDA over all the study data

```{r}
library("dplyr")
library("move2")
library("units")
library("rnaturalearth")
library("webshot2")

foxes_wiltshire <- movebank_download_study(
  study_id = 3179890710,
  sensor_type_id = c("gps"),
  'license-md5'='ffa36f79defe10eac9fe70f6502a17e0',
  attributes = NULL
)
foxes_bylot <- movebank_download_study(
  study_id = 1371322147,
  'license-md5'='9559cb1b1cca51e9f3fd69812e5e22dc',
  attributes = NULL
)
foxes_herschel <- movebank_download_study(
  study_id = 1371529289,
  'license-md5'='436e8205d0c2973115e2024b146a6ad5',
  attributes = NULL
)
```

### Check if the data is looks correct (i.e., positioned on the correct island)

```{r}
library("sf")
library("tmap")
tmap_options(basemaps = "OpenStreetMap")
tmap_mode("view")
bylot_tracks <- mt_track_lines(foxes_bylot)
bylot_tracks_buffer <- st_buffer(bylot_tracks, dist = 50000)
map <- 
  tm_shape(bylot_tracks_buffer) + 
  tm_borders(alpha = 0) +
  tm_shape(bylot_tracks) +
  tm_lines()
tmap_save(map, filename = "img/bylot_map.html")
webshot("img/bylot_map.html", file = "img/bylot_map.png", vwidth = 800, vheight = 600)
```

```{r}
herschel_tracks <- mt_track_lines(foxes_herschel)
herschel_tracks_buffer <- st_buffer(herschel_tracks, dist = 50000)
map <- tm_shape(herschel_tracks_buffer) + 
  tm_borders(alpha = 0) +
  tm_shape(herschel_tracks) +
  tm_lines()
tmap_save(map, filename = "img/herschel_map.html")
webshot("img/herschel_map.html", file = "img/herschel_map.png", vwidth = 800, vheight = 600)
```

```{r}
wilt_tracks <- mt_track_lines(foxes_wiltshire)
wilt_tracks_buffer <- st_buffer(wilt_tracks, dist = 200)
map <- tm_shape(wilt_tracks_buffer) + 
  tm_borders(alpha = 0) +
  tm_shape(wilt_tracks) +
  tm_lines()
tmap_save(map, filename = "img/wiltshire_map.html")
webshot("img/wiltshire_map.html", file = "img/wiltshire_map.png", vwidth = 800, vheight = 600)
```

## Counts

```{r}
library("lubridate")
library("sf")
counts_herschel <- data.frame(foxes_herschel) |> 
  mutate(source = as.character("Herschel")) |>
  select(source, timestamp)
st_drop_geometry(counts_herschel)
counts_bylot <- data.frame(foxes_bylot) |> 
  mutate(source = as.character("Bylot")) |>
  select(source, timestamp)
st_drop_geometry(counts_bylot)
counts_wiltshire <- data.frame(foxes_wiltshire) |> 
  mutate(source = as.character("Wiltshire")) |>
  select(source, timestamp)
st_drop_geometry(counts_wiltshire)

combined_data <- bind_rows(counts_herschel, counts_bylot, counts_wiltshire)
combined_data <- combined_data |>
  mutate(date = as.Date(timestamp), month = month(timestamp), year = as.integer(year(timestamp)))
year_count <- combined_data |>
  group_by(source, year) |>
  summarise(count = n())
month_count <- combined_data |>
  group_by(source, month) |>
  summarise(count = n())
```

## Count visualization

```{r}
library("ggplot2")

ggplot(year_count, aes(x = factor(year), y = count, color = source, fill = source)) +
  geom_bar(stat = "identity", width = 0.5) +
  facet_wrap(~ ifelse(source %in% c("Bylot", "Herschel"), "Bylot/Herschel", "Wiltshire"), scales = "free_y") +
  labs(x = "Year", y = "Number of data points") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90)) +
  theme(axis.text.x = element_text(size = 6)) +
  theme(axis.text.x = element_text(margin = margin(b = 20))) +
  theme(axis.text.y = element_text(margin = margin(l = 20)))
ggsave("img/year_count.png")
```

```{r}
month_count$month_name <- factor(month.abb[month_count$month], levels = month.abb)
ggplot(month_count, aes(x = as.factor(month_name), y = count, color = source)) +
  geom_point() +
  scale_x_discrete() +
  facet_wrap(~ ifelse(source %in% c("Bylot", "Herschel"), "Bylot/Herschel", "Wiltshire"), scales = "free_y") +
  labs(x = "Month", y = "Number of data points") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90)) +
  theme(axis.text.x = element_text(size = 6)) +
  theme(axis.text.x = element_text(margin = margin(b = 20))) +
  theme(axis.text.y = element_text(margin = margin(l = 20)))
ggsave("img/month_count.png")
```

## Filtered data (UK wader nesting season)

```{r}
foxes_wiltshire_filtered <- movebank_download_study(
  study_id = 3179890710,
  sensor_type_id = c("gps"),
  'license-md5'='ffa36f79defe10eac9fe70f6502a17e0',
  timestamp_start = as.POSIXct("2019-03-15 00:00:00"),
  timestamp_end = as.POSIXct("2019-06-15 23:59:00")
)
foxes_bylot_filtered <- movebank_download_study(
  study_id = 1371322147,
  'license-md5'='9559cb1b1cca51e9f3fd69812e5e22dc',
  timestamp_start = as.POSIXct("2012-03-15 00:00:00"),
  timestamp_end = as.POSIXct("2012-06-15 23:59:00")
)  
```

```{r}
#| label: fig-home-ranges-bylot
#| echo: false
#| warning: false
#| fig-cap: "Home ranges for Bylot foxes (March 15th to June 15th, 2012)"
library("ggplot2")
c1_tracks <- mt_track_lines(foxes_bylot_filtered)
c1_mcp <- st_convex_hull(c1_tracks)

ggplot(c1_mcp, aes(fill = as.factor(individual_id))) +
  geom_sf(alpha = 0.4) +
  labs(x = "Longitude", y = "Latitude", fill = "Fox id")
ggsave("img/home_range_bylot_wader.png")
```

```{r}
#| label: fig-home-ranges-wiltshire
#| fig-cap: "Home ranges for Wiltshire foxes (March 15th to June 15th, 2019)"
#| echo: false
#| warning: false

w_tracks <- mt_track_lines(foxes_wiltshire_filtered)
w_mcp <- st_convex_hull(w_tracks)
ggplot(w_mcp, aes(fill = as.factor(individual_id))) +
  geom_sf(alpha = 0.4) +
  labs(x = "Longitude", y = "Latitude", fill = "Fox id")
ggsave("img/home_range_wiltshire_wader.png")
```

```{r}
#| label: red-fox-data-filtered-medians
#| include: false
c1_area <- st_area(c1_mcp)
c1_median <- median(c1_area)
print(c1_median)
w_area <- st_area(w_mcp)
w_median <- median(w_area)
print(w_median)
```

### Check if there is distortion in the coordinate system (Bylot is high up North)

```{r}
# EPSG:3154 NAD83(CSRS) / UTM zone 7N Herschel Island, also known as Qikiqtaruk,  69°35'23" N, 139°05'57" W

# c1 is Bylot island, which is 11.067 km^2 and split over two UTM zones:
# EPSG:2958	NAD83(CSRS) / UTM zone 17N
# EPSG:2959 NAD83(CSRS) / UTM zone 18N
# This coordinate system covers them both: EPSG:3347 NAD83 / Statistics Canada Lambert
convert_m2_to_km2 <- function(area) {
  return(area * 0.000001)
}

c1_mcp_3347 <- st_transform(c1_mcp, 3347)
print(convert_m2_to_km2(median(st_area(c1_mcp_3347))))

# See what happens if we use the partial coordinate systems
c1_mcp_2958 <- st_transform(c1_mcp, 2958)
print(convert_m2_to_km2(median(st_area(c1_mcp_2958))))
c1_mcp_2959 <- st_transform(c1_mcp, 2959)
print(convert_m2_to_km2(median(st_area(c1_mcp_2959))))
```

## Sampled filtered data for UK wader nesting season 

```{r}
#| label: red-fox-data-filtered-sampled
#| include: false
foxes_wiltshire_filtered_sampled_24h <- foxes_wiltshire_filtered |>
  mt_filter_per_interval(unit = "24 hours")
```

```{r}
#| label: fig-home-ranges-wiltshire-sampled24h
#| fig-cap: "Home ranges for Wiltshire foxes (March 15th to June 15th, 2019, 24 hour sampling interval)"
#| echo: false
#| warning: false

w_tracks <- mt_track_lines(foxes_wiltshire_filtered_sampled_24h)
w_mcp <- st_convex_hull(w_tracks)
ggplot(w_mcp, aes(fill = as.factor(individual_id))) +
  geom_sf(alpha = 0.4) +
  labs(x = "Longitude", y = "Latitude", fill = "Fox id")
ggsave("img/home_range_wiltshire_wader_sampled.png")
```

```{r}
#| label: red-fox-data-filtered-sampled-median
#| include: false
w_area <- st_area(w_mcp)
w_median <- median(w_area)
print(w_median)
```

